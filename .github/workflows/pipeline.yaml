name: Deployment pipeline

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches: [main]
    types: [opened, synchronize]
  workflow_dispatch:

jobs:
  lint_test_and_deploy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - uses: actions/setup-node@v3
        with:
          node-version: '19.8.1'
      - name: Install Dependencies
        run: npm install concurrently && npm run install:all
      - name: Lint
        run: npm run lint
      - name: Build
        run : npm run build
      - name: Backend Tests
        run: npm test
        env:
          MONGODB_URI_BASE: ${{secrets.TEST_MONGODB_URI}}
          SECRET: ${{secrets.TESTING_SECRET}}
      - name: Deploy
        id: deploy
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{secrets.FLY_API_TOKEN}}
        if: (github.event_name == 'push') && !(contains(join(github.event.commits.*.message), '#skip'))
      - name: Rollback
        run: cd backend && flyctl deploy -i `flyctl releases -j | jq ".[1].ImageRef" -r` --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        if: failure() && (steps.deploy.outcome == 'failure')
      - name: Send Discord Notification
        if: always()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{secrets.DISCORD_WEBHOOK}}
  tag_release:
    needs: [lint_test_and_deploy]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.66.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
        if: (github.event_name == 'push') && !(contains(join(github.event.commits.*.message), '#skip'))